// Copyright © 2020 De Staat der Nederlanden, Ministerie van Volksgezondheid, Welzijn en Sport.
// Licensed under the EUROPEAN UNION PUBLIC LICENCE v. 1.2
// SPDX-License-Identifier: EUPL-1.2

using System;
using System.ComponentModel.DataAnnotations.Schema;
using NL.Rijksoverheid.ExposureNotification.BackEnd.Components.EfDatabase;
using NL.Rijksoverheid.ExposureNotification.BackEnd.Components.ExposureKeySetsEngine;

namespace NL.Rijksoverheid.ExposureNotification.BackEnd.Components.Workflows.KeysLastWorkflow
{
    [Table("KeysLastTeksWorkflowItems")] //TODO Remove
    //TODO rename KeyReleaseWorkflowState
    public class KeysLastTeksWorkflowEntity
    {
        public int Id { get; set; }

        //This was originally for killing them off in other workflows
        //Q1 - does it breach privacy?
        //- If it doesn't, we can determine the maximum number of TEKs this user can POST.
        public DateTime Created { get; set; }

        //MOVED See new table public string? TekContent { get; set; }
        //MOVED add to TEK table public string Region { get; set; } = DefaultValues.Region;

        /// <summary>
        /// aka ICC
        /// May be generated by the phone and POSTed or Lab workflow 1.
        /// </summary>
        public string? SecretToken { get; set; }

        /// <summary>
        /// 256bit random key
        /// </summary>
        public string? ExternalTestId { get; set; }

        /// <summary>
        /// 10 digit key 
        /// </summary>
        public string? TekWriteAuthorisationToken { get; set; }

        public bool Authorised { get; set; }


        //REMOVED public KeysLastWorkflowState State { get; set; }
        //REMOVED public DateTime? AuthorisationWindowStart { get; set; }


    }

    public class TemporaryExposureKeyEntity
    {
        public int Id { get; set; }

        public KeysLastTeksWorkflowEntity Owner { get; set; }

        public byte[] KeyData { get; set; }

        public int RollingStart { get; set; }

        public int RollingPeriod { get; set; }

        public int Risk { get; set; }
        public string Region { get; set; }
        public PublishingState PublishingState { get; set; }
    }

    //Authorisation is via the parent workflow entity
    public enum PublishingState
    {
        Unpublished,
        Processing,
        Published
    }
}
